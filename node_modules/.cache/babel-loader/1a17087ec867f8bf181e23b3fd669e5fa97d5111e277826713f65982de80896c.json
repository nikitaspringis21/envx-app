{"ast":null,"code":"var _jsxFileName = \"/Users/nikitaspringis/rbs-test/src/CalendarPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Calendar from 'react-calendar';\nimport { useNavigate } from 'react-router-dom';\nimport 'react-calendar/dist/Calendar.css';\nimport './CalendarPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CalendarPage() {\n  _s();\n  const [date, setDate] = useState(new Date());\n  const [upcomingTasks, setUpcomingTasks] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    loadUpcomingTasks();\n    const handleStorageChange = event => {\n      if (event.key.includes('_tasks2')) {\n        loadUpcomingTasks();\n      }\n    };\n    window.addEventListener('storage', handleStorageChange);\n    return () => {\n      window.removeEventListener('storage', handleStorageChange);\n    };\n  }, []);\n  const loadUpcomingTasks = () => {\n    let tasks = [];\n    for (let i = 0; i < 7; i++) {\n      let currentDate = new Date(date);\n      currentDate.setDate(currentDate.getDate() + i);\n      const dateString = currentDate.toISOString().slice(0, 10);\n      const dayTasks = JSON.parse(localStorage.getItem(`${dateString}_tasks2`) || '[]');\n      tasks = [...tasks, ...dayTasks.map(task => `${dateString} : ${task.activity}`)];\n    }\n    setUpcomingTasks(tasks);\n  };\n  const onChange = newDate => {\n    setDate(newDate);\n    const dateString = newDate.toLocaleDateString('en-CA');\n    navigate(`/day/${dateString}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-container\",\n    children: [/*#__PURE__*/_jsxDEV(Calendar, {\n      onChange: onChange,\n      value: date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upcoming-tasks\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"P\\u0101rbaudes darbi dr\\u012Bzum\\u0101\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), upcomingTasks.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(CalendarPage, \"+k3D1rQG0A7EcvVESqZH47p00Lo=\", false, function () {\n  return [useNavigate];\n});\n_c = CalendarPage;\nexport default CalendarPage;\nvar _c;\n$RefreshReg$(_c, \"CalendarPage\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","useNavigate","jsxDEV","_jsxDEV","CalendarPage","_s","date","setDate","Date","upcomingTasks","setUpcomingTasks","navigate","loadUpcomingTasks","handleStorageChange","event","key","includes","window","addEventListener","removeEventListener","tasks","i","currentDate","getDate","dateString","toISOString","slice","dayTasks","JSON","parse","localStorage","getItem","map","task","activity","onChange","newDate","toLocaleDateString","className","children","value","fileName","_jsxFileName","lineNumber","columnNumber","item","index","_c","$RefreshReg$"],"sources":["/Users/nikitaspringis/rbs-test/src/CalendarPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Calendar from 'react-calendar';\nimport { useNavigate } from 'react-router-dom';\nimport 'react-calendar/dist/Calendar.css';\nimport './CalendarPage.css';\n\nfunction CalendarPage() {\n    const [date, setDate] = useState(new Date());\n    const [upcomingTasks, setUpcomingTasks] = useState([]);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        loadUpcomingTasks();\n        const handleStorageChange = (event) => {\n            if (event.key.includes('_tasks2')) {\n                loadUpcomingTasks();\n            }\n        };\n\n        window.addEventListener('storage', handleStorageChange); \n        return () => {\n            window.removeEventListener('storage', handleStorageChange); \n        };\n    }, []);\n\n    const loadUpcomingTasks = () => {\n        let tasks = [];\n        for (let i = 0; i < 7; i++) { \n            let currentDate = new Date(date);\n            currentDate.setDate(currentDate.getDate() + i);\n            const dateString = currentDate.toISOString().slice(0, 10);\n            const dayTasks = JSON.parse(localStorage.getItem(`${dateString}_tasks2`) || '[]');\n            tasks = [...tasks, ...dayTasks.map(task => `${dateString} : ${task.activity}`)];\n        }\n        setUpcomingTasks(tasks);\n    };\n\n    const onChange = newDate => {\n        setDate(newDate); \n        const dateString = newDate.toLocaleDateString('en-CA');\n        navigate(`/day/${dateString}`); \n    };\n\n    return (\n        <div className=\"calendar-container\">\n            <Calendar\n                onChange={onChange}\n                value={date}\n            />\n            <div className=\"upcoming-tasks\">\n                <h3>Pārbaudes darbi drīzumā</h3>\n                {upcomingTasks.map((item, index) => (\n                    <div key={index}>{item}</div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default CalendarPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}